rfc
internet
protocol
darpa
internet
program
protocol
specification
september
prepared
for
defense
advanced
research
projects
agency
information
processing
techniques
office
wilson
boulevard
arlington
virginia
by
information
sciences
institute
university
of
southern
california
admiralty
way
marina
del
rey
california
september
internet
protocol
table
of
contents
preface
iii
introduction
motivation
scope
interfaces
operation
overview
relation
to
other
protocols
model
of
operation
function
description
gateways
specification
internet
header
format
discussion
interfaces
appendix
a
examples
scenarios
appendix
b
data
transmission
order
glossary
references
page
i
september
internet
protocol
page
ii
september
internet
protocol
preface
this
document
specifies
the
dod
standard
internet
protocol
this
document
is
based
on
six
earlier
editions
of
the
arpa
internet
protocol
specification
and
the
present
text
draws
heavily
from
them
there
have
been
many
contributors
to
this
work
both
in
terms
of
concepts
and
in
terms
of
text
this
edition
revises
aspects
of
addressing
error
handling
option
codes
and
the
security
precedence
compartments
and
handling
restriction
features
of
the
internet
protocol
jon
postel
editor
page
iii
september
rfc
replaces
rfc
iens
internet
protocol
darpa
internet
program
protocol
specification
introduction
motivation
the
internet
protocol
is
designed
for
use
in
interconnected
systems
of
packet-switched
computer
communication
networks
such
a
system
has
been
called
a
catenet
the
internet
protocol
provides
for
transmitting
blocks
of
data
called
datagrams
from
sources
to
destinations
where
sources
and
destinations
are
hosts
identified
by
fixed
length
addresses
the
internet
protocol
also
provides
for
fragmentation
and
reassembly
of
long
datagrams
if
necessary
for
transmission
through
small
packet
networks
scope
the
internet
protocol
is
specifically
limited
in
scope
to
provide
the
functions
necessary
to
deliver
a
package
of
bits
an
internet
datagram
from
a
source
to
a
destination
over
an
interconnected
system
of
networks
there
are
no
mechanisms
to
augment
end-to-end
data
reliability
flow
control
sequencing
or
other
services
commonly
found
in
host-to-host
protocols
the
internet
protocol
can
capitalize
on
the
services
of
its
supporting
networks
to
provide
various
types
and
qualities
of
service
interfaces
this
protocol
is
called
on
by
host-to-host
protocols
in
an
internet
environment
this
protocol
calls
on
local
network
protocols
to
carry
the
internet
datagram
to
the
next
gateway
or
destination
host
for
example
a
tcp
module
would
call
on
the
internet
module
to
take
a
tcp
segment
including
the
tcp
header
and
user
data
as
the
data
portion
of
an
internet
datagram
the
tcp
module
would
provide
the
addresses
and
other
parameters
in
the
internet
header
to
the
internet
module
as
arguments
of
the
call
the
internet
module
would
then
create
an
internet
datagram
and
call
on
the
local
network
interface
to
transmit
the
internet
datagram
in
the
arpanet
case
for
example
the
internet
module
would
call
on
a
page
september
internet
protocol
introduction
local
net
module
which
would
add
the
leader
to
the
internet
datagram
creating
an
arpanet
message
to
transmit
to
the
imp
the
arpanet
address
would
be
derived
from
the
internet
address
by
the
local
network
interface
and
would
be
the
address
of
some
host
in
the
arpanet
that
host
might
be
a
gateway
to
other
networks
operation
the
internet
protocol
implements
two
basic
functions
addressing
and
fragmentation
the
internet
modules
use
the
addresses
carried
in
the
internet
header
to
transmit
internet
datagrams
toward
their
destinations
the
selection
of
a
path
for
transmission
is
called
routing
the
internet
modules
use
fields
in
the
internet
header
to
fragment
and
reassemble
internet
datagrams
when
necessary
for
transmission
through
small
packet
networks
the
model
of
operation
is
that
an
internet
module
resides
in
each
host
engaged
in
internet
communication
and
in
each
gateway
that
interconnects
networks
these
modules
share
common
rules
for
interpreting
address
fields
and
for
fragmenting
and
assembling
internet
datagrams
in
addition
these
modules
especially
in
gateways
have
procedures
for
making
routing
decisions
and
other
functions
the
internet
protocol
treats
each
internet
datagram
as
an
independent
entity
unrelated
to
any
other
internet
datagram
there
are
no
connections
or
logical
circuits
virtual
or
otherwise
the
internet
protocol
uses
four
key
mechanisms
in
providing
its
service
type
of
service
time
to
live
options
and
header
checksum
the
type
of
service
is
used
to
indicate
the
quality
of
the
service
desired
the
type
of
service
is
an
abstract
or
generalized
set
of
parameters
which
characterize
the
service
choices
provided
in
the
networks
that
make
up
the
internet
this
type
of
service
indication
is
to
be
used
by
gateways
to
select
the
actual
transmission
parameters
for
a
particular
network
the
network
to
be
used
for
the
next
hop
or
the
next
gateway
when
routing
an
internet
datagram
the
time
to
live
is
an
indication
of
an
upper
bound
on
the
lifetime
of
an
internet
datagram
it
is
set
by
the
sender
of
the
datagram
and
reduced
at
the
points
along
the
route
where
it
is
processed
if
the
time
to
live
reaches
zero
before
the
internet
datagram
reaches
its
destination
the
internet
datagram
is
destroyed
the
time
to
live
can
be
thought
of
as
a
self
destruct
time
limit
page
september
internet
protocol
introduction
the
options
provide
for
control
functions
needed
or
useful
in
some
situations
but
unnecessary
for
the
most
common
communications
the
options
include
provisions
for
timestamps
security
and
special
routing
the
header
checksum
provides
a
verification
that
the
information
used
in
processing
internet
datagram
has
been
transmitted
correctly
the
data
may
contain
errors
if
the
header
checksum
fails
the
internet
datagram
is
discarded
at
once
by
the
entity
which
detects
the
error
the
internet
protocol
does
not
provide
a
reliable
communication
facility
there
are
no
acknowledgments
either
end-to-end
or
hop-by-hop
there
is
no
error
control
for
data
only
a
header
checksum
there
are
no
retransmissions
there
is
no
flow
control
errors
detected
may
be
reported
via
the
internet
control
message
protocol
icmp
which
is
implemented
in
the
internet
protocol
module
page
september
internet
protocol
page
september
internet
protocol
overview
relation
to
other
protocols
the
following
diagram
illustrates
the
place
of
the
internet
protocol
in
the
protocol
hierarchy
telnet
ftp
tftp
tcp
udp
internet
protocol
icmp
local
network
protocol
protocol
relationships
figure
internet
protocol
interfaces
on
one
side
to
the
higher
level
host-to-host
protocols
and
on
the
other
side
to
the
local
network
protocol
in
this
context
a
local
network
may
be
a
small
network
in
a
building
or
a
large
network
such
as
the
arpanet
model
of
operation
the
model
of
operation
for
transmitting
a
datagram
from
one
application
program
to
another
is
illustrated
by
the
following
scenario
we
suppose
that
this
transmission
will
involve
one
intermediate
gateway
the
sending
application
program
prepares
its
data
and
calls
on
its
local
internet
module
to
send
that
data
as
a
datagram
and
passes
the
destination
address
and
other
parameters
as
arguments
of
the
call
the
internet
module
prepares
a
datagram
header
and
attaches
the
data
to
it
the
internet
module
determines
a
local
network
address
for
this
internet
address
in
this
case
it
is
the
address
of
a
gateway
page
september
internet
protocol
overview
it
sends
this
datagram
and
the
local
network
address
to
the
local
network
interface
the
local
network
interface
creates
a
local
network
header
and
attaches
the
datagram
to
it
then
sends
the
result
via
the
local
network
the
datagram
arrives
at
a
gateway
host
wrapped
in
the
local
network
header
the
local
network
interface
strips
off
this
header
and
turns
the
datagram
over
to
the
internet
module
the
internet
module
determines
from
the
internet
address
that
the
datagram
is
to
be
forwarded
to
another
host
in
a
second
network
the
internet
module
determines
a
local
net
address
for
the
destination
host
it
calls
on
the
local
network
interface
for
that
network
to
send
the
datagram
this
local
network
interface
creates
a
local
network
header
and
attaches
the
datagram
sending
the
result
to
the
destination
host
at
this
destination
host
the
datagram
is
stripped
of
the
local
net
header
by
the
local
network
interface
and
handed
to
the
internet
module
the
internet
module
determines
that
the
datagram
is
for
an
application
program
in
this
host
it
passes
the
data
to
the
application
program
in
response
to
a
system
call
passing
the
source
address
and
other
parameters
as
results
of
the
call
application
application
program
program
internet
module
internet
module
internet
module
lni
lni
lni
lni
local
network
local
network
transmission
path
figure
page
september
internet
protocol
overview
function
description
the
function
or
purpose
of
internet
protocol
is
to
move
datagrams
through
an
interconnected
set
of
networks
this
is
done
by
passing
the
datagrams
from
one
internet
module
to
another
until
the
destination
is
reached
the
internet
modules
reside
in
hosts
and
gateways
in
the
internet
system
the
datagrams
are
routed
from
one
internet
module
to
another
through
individual
networks
based
on
the
interpretation
of
an
internet
address
thus
one
important
mechanism
of
the
internet
protocol
is
the
internet
address
in
the
routing
of
messages
from
one
internet
module
to
another
datagrams
may
need
to
traverse
a
network
whose
maximum
packet
size
is
smaller
than
the
size
of
the
datagram
to
overcome
this
difficulty
a
fragmentation
mechanism
is
provided
in
the
internet
protocol
addressing
a
distinction
is
made
between
names
addresses
and
routes
a
name
indicates
what
we
seek
an
address
indicates
where
it
is
a
route
indicates
how
to
get
there
the
internet
protocol
deals
primarily
with
addresses
it
is
the
task
of
higher
level
i.e
host-to-host
or
application
protocols
to
make
the
mapping
from
names
to
addresses
the
internet
module
maps
internet
addresses
to
local
net
addresses
it
is
the
task
of
lower
level
i.e
local
net
or
gateways
procedures
to
make
the
mapping
from
local
net
addresses
to
routes
addresses
are
fixed
length
of
four
octets
bits
an
address
begins
with
a
network
number
followed
by
local
address
called
the
rest
field
there
are
three
formats
or
classes
of
internet
addresses
in
class
a
the
high
order
bit
is
zero
the
next
bits
are
the
network
and
the
last
bits
are
the
local
address
in
class
b
the
high
order
two
bits
are
one-zero
the
next
bits
are
the
network
and
the
last
bits
are
the
local
address
in
class
c
the
high
order
three
bits
are
one-one-zero
the
next
bits
are
the
network
and
the
last
bits
are
the
local
address
care
must
be
taken
in
mapping
internet
addresses
to
local
net
addresses
a
single
physical
host
must
be
able
to
act
as
if
it
were
several
distinct
hosts
to
the
extent
of
using
several
distinct
internet
addresses
some
hosts
will
also
have
several
physical
interfaces
multi-homing
that
is
provision
must
be
made
for
a
host
to
have
several
physical
interfaces
to
the
network
with
each
having
several
logical
internet
addresses
page
september
internet
protocol
overview
examples
of
address
mappings
may
be
found
in
address
mappings
fragmentation
fragmentation
of
an
internet
datagram
is
necessary
when
it
originates
in
a
local
net
that
allows
a
large
packet
size
and
must
traverse
a
local
net
that
limits
packets
to
a
smaller
size
to
reach
its
destination
an
internet
datagram
can
be
marked
don't
fragment
any
internet
datagram
so
marked
is
not
to
be
internet
fragmented
under
any
circumstances
if
internet
datagram
marked
don't
fragment
cannot
be
delivered
to
its
destination
without
fragmenting
it
it
is
to
be
discarded
instead
fragmentation
transmission
and
reassembly
across
a
local
network
which
is
invisible
to
the
internet
protocol
module
is
called
intranet
fragmentation
and
may
be
used
the
internet
fragmentation
and
reassembly
procedure
needs
to
be
able
to
break
a
datagram
into
an
almost
arbitrary
number
of
pieces
that
can
be
later
reassembled
the
receiver
of
the
fragments
uses
the
identification
field
to
ensure
that
fragments
of
different
datagrams
are
not
mixed
the
fragment
offset
field
tells
the
receiver
the
position
of
a
fragment
in
the
original
datagram
the
fragment
offset
and
length
determine
the
portion
of
the
original
datagram
covered
by
this
fragment
the
more-fragments
flag
indicates
by
being
reset
the
last
fragment
these
fields
provide
sufficient
information
to
reassemble
datagrams
the
identification
field
is
used
to
distinguish
the
fragments
of
one
datagram
from
those
of
another
the
originating
protocol
module
of
an
internet
datagram
sets
the
identification
field
to
a
value
that
must
be
unique
for
that
source-destination
pair
and
protocol
for
the
time
the
datagram
will
be
active
in
the
internet
system
the
originating
protocol
module
of
a
complete
datagram
sets
the
more-fragments
flag
to
zero
and
the
fragment
offset
to
zero
to
fragment
a
long
internet
datagram
an
internet
protocol
module
for
example
in
a
gateway
creates
two
new
internet
datagrams
and
copies
the
contents
of
the
internet
header
fields
from
the
long
datagram
into
both
new
internet
headers
the
data
of
the
long
datagram
is
divided
into
two
portions
on
a
octet
bit
boundary
the
second
portion
might
not
be
an
integral
multiple
of
octets
but
the
first
must
be
call
the
number
of
octet
blocks
in
the
first
portion
nfb
for
number
of
fragment
blocks
the
first
portion
of
the
data
is
placed
in
the
first
new
internet
datagram
and
the
total
length
field
is
set
to
the
length
of
the
first
page
september
internet
protocol
overview
datagram
the
more-fragments
flag
is
set
to
one
the
second
portion
of
the
data
is
placed
in
the
second
new
internet
datagram
and
the
total
length
field
is
set
to
the
length
of
the
second
datagram
the
more-fragments
flag
carries
the
same
value
as
the
long
datagram
the
fragment
offset
field
of
the
second
new
internet
datagram
is
set
to
the
value
of
that
field
in
the
long
datagram
plus
nfb
this
procedure
can
be
generalized
for
an
n-way
split
rather
than
the
two-way
split
described
to
assemble
the
fragments
of
an
internet
datagram
an
internet
protocol
module
for
example
at
a
destination
host
combines
internet
datagrams
that
all
have
the
same
value
for
the
four
fields
identification
source
destination
and
protocol
the
combination
is
done
by
placing
the
data
portion
of
each
fragment
in
the
relative
position
indicated
by
the
fragment
offset
in
that
fragment's
internet
header
the
first
fragment
will
have
the
fragment
offset
zero
and
the
last
fragment
will
have
the
more-fragments
flag
reset
to
zero
gateways
gateways
implement
internet
protocol
to
forward
datagrams
between
networks
gateways
also
implement
the
gateway
to
gateway
protocol
ggp
to
coordinate
routing
and
other
internet
control
information
in
a
gateway
the
higher
level
protocols
need
not
be
implemented
and
the
ggp
functions
are
added
to
the
ip
module
internet
protocol
icmp
ggp
local
net
local
net
gateway
protocols
figure
page
september
internet
protocol
page
september
internet
protocol
specification
internet
header
format
a
summary
of
the
contents
of
the
internet
header
follows
version
ihl
type
of
service
total
length
identification
flags
fragment
offset
time
to
live
protocol
header
checksum
source
address
destination
address
options
padding
example
internet
datagram
header
figure
note
that
each
tick
mark
represents
one
bit
position
version
bits
the
version
field
indicates
the
format
of
the
internet
header
this
document
describes
version
ihl
bits
internet
header
length
is
the
length
of
the
internet
header
in
bit
words
and
thus
points
to
the
beginning
of
the
data
note
that
the
minimum
value
for
a
correct
header
is
page
september
internet
protocol
specification
type
of
service
bits
the
type
of
service
provides
an
indication
of
the
abstract
parameters
of
the
quality
of
service
desired
these
parameters
are
to
be
used
to
guide
the
selection
of
the
actual
service
parameters
when
transmitting
a
datagram
through
a
particular
network
several
networks
offer
service
precedence
which
somehow
treats
high
precedence
traffic
as
more
important
than
other
traffic
generally
by
accepting
only
traffic
above
a
certain
precedence
at
time
of
high
load
the
major
choice
is
a
three
way
tradeoff
between
low-delay
high-reliability
and
high-throughput
bits
precedence
bit
normal
delay
low
delay
bits
normal
throughput
high
throughput
bits
normal
relibility
high
relibility
bit
reserved
for
future
use
precedence
d
t
r
precedence
network
control
internetwork
control
critic/ecp
flash
override
flash
immediate
priority
routine
the
use
of
the
delay
throughput
and
reliability
indications
may
increase
the
cost
in
some
sense
of
the
service
in
many
networks
better
performance
for
one
of
these
parameters
is
coupled
with
worse
performance
on
another
except
for
very
unusual
cases
at
most
two
of
these
three
indications
should
be
set
the
type
of
service
is
used
to
specify
the
treatment
of
the
datagram
during
its
transmission
through
the
internet
system
example
mappings
of
the
internet
type
of
service
to
the
actual
service
provided
on
networks
such
as
autodin
ii
arpanet
satnet
and
prnet
is
given
in
service
mappings
page
september
internet
protocol
specification
the
network
control
precedence
designation
is
intended
to
be
used
within
a
network
only
the
actual
use
and
control
of
that
designation
is
up
to
each
network
the
internetwork
control
designation
is
intended
for
use
by
gateway
control
originators
only
if
the
actual
use
of
these
precedence
designations
is
of
concern
to
a
particular
network
it
is
the
responsibility
of
that
network
to
control
the
access
to
and
use
of
those
precedence
designations
total
length
bits
total
length
is
the
length
of
the
datagram
measured
in
octets
including
internet
header
and
data
this
field
allows
the
length
of
a
datagram
to
be
up
to
octets
such
long
datagrams
are
impractical
for
most
hosts
and
networks
all
hosts
must
be
prepared
to
accept
datagrams
of
up
to
octets
whether
they
arrive
whole
or
in
fragments
it
is
recommended
that
hosts
only
send
datagrams
larger
than
octets
if
they
have
assurance
that
the
destination
is
prepared
to
accept
the
larger
datagrams
the
number
is
selected
to
allow
a
reasonable
sized
data
block
to
be
transmitted
in
addition
to
the
required
header
information
for
example
this
size
allows
a
data
block
of
octets
plus
header
octets
to
fit
in
a
datagram
the
maximal
internet
header
is
octets
and
a
typical
internet
header
is
octets
allowing
a
margin
for
headers
of
higher
level
protocols
identification
bits
an
identifying
value
assigned
by
the
sender
to
aid
in
assembling
the
fragments
of
a
datagram
flags
bits
various
control
flags
bit
reserved
must
be
zero
bit
df
may
fragment
don't
fragment
bit
mf
last
fragment
more
fragments
d
m
f
f
fragment
offset
bits
this
field
indicates
where
in
the
datagram
this
fragment
belongs
page
september
internet
protocol
specification
the
fragment
offset
is
measured
in
units
of
octets
bits
the
first
fragment
has
offset
zero
time
to
live
bits
this
field
indicates
the
maximum
time
the
datagram
is
allowed
to
remain
in
the
internet
system
if
this
field
contains
the
value
zero
then
the
datagram
must
be
destroyed
this
field
is
modified
in
internet
header
processing
the
time
is
measured
in
units
of
seconds
but
since
every
module
that
processes
a
datagram
must
decrease
the
ttl
by
at
least
one
even
if
it
process
the
datagram
in
less
than
a
second
the
ttl
must
be
thought
of
only
as
an
upper
bound
on
the
time
a
datagram
may
exist
the
intention
is
to
cause
undeliverable
datagrams
to
be
discarded
and
to
bound
the
maximum
datagram
lifetime
protocol
bits
this
field
indicates
the
next
level
protocol
used
in
the
data
portion
of
the
internet
datagram
the
values
for
various
protocols
are
specified
in
assigned
numbers
header
checksum
bits
a
checksum
on
the
header
only
since
some
header
fields
change
e.g
time
to
live
this
is
recomputed
and
verified
at
each
point
that
the
internet
header
is
processed
the
checksum
algorithm
is
the
checksum
field
is
the
bit
one's
complement
of
the
one's
complement
sum
of
all
bit
words
in
the
header
for
purposes
of
computing
the
checksum
the
value
of
the
checksum
field
is
zero
this
is
a
simple
to
compute
checksum
and
experimental
evidence
indicates
it
is
adequate
but
it
is
provisional
and
may
be
replaced
by
a
crc
procedure
depending
on
further
experience
source
address
bits
the
source
address
see
section
destination
address
bits
the
destination
address
see
section
page
september
internet
protocol
specification
options
variable
the
options
may
appear
or
not
in
datagrams
they
must
be
implemented
by
all
ip
modules
host
and
gateways
what
is
optional
is
their
transmission
in
any
particular
datagram
not
their
implementation
in
some
environments
the
security
option
may
be
required
in
all
datagrams
the
option
field
is
variable
in
length
there
may
be
zero
or
more
options
there
are
two
cases
for
the
format
of
an
option
case
a
single
octet
of
option-type
case
an
option-type
octet
an
option-length
octet
and
the
actual
option-data
octets
the
option-length
octet
counts
the
option-type
octet
and
the
option-length
octet
as
well
as
the
option-data
octets
the
option-type
octet
is
viewed
as
having
fields
bit
copied
flag
bits
option
class
bits
option
number
the
copied
flag
indicates
that
this
option
is
copied
into
all
fragments
on
fragmentation
not
copied
copied
the
option
classes
are
control
reserved
for
future
use
debugging
and
measurement
reserved
for
future
use
page
september
internet
protocol
specification
the
following
internet
options
are
defined
class
number
length
description
end
of
option
list
this
option
occupies
only
octet
it
has
no
length
octet
no
operation
this
option
occupies
only
octet
it
has
no
length
octet
security
used
to
carry
security
compartmentation
user
group
tcc
and
handling
restriction
codes
compatible
with
dod
requirements
var
loose
source
routing
used
to
route
the
internet
datagram
based
on
information
supplied
by
the
source
var
strict
source
routing
used
to
route
the
internet
datagram
based
on
information
supplied
by
the
source
var
record
route
used
to
trace
the
route
an
internet
datagram
takes
stream
id
used
to
carry
the
stream
identifier
var
internet
timestamp
specific
option
definitions
end
of
option
list
type
this
option
indicates
the
end
of
the
option
list
this
might
not
coincide
with
the
end
of
the
internet
header
according
to
the
internet
header
length
this
is
used
at
the
end
of
all
options
not
the
end
of
each
option
and
need
only
be
used
if
the
end
of
the
options
would
not
otherwise
coincide
with
the
end
of
the
internet
header
may
be
copied
introduced
or
deleted
on
fragmentation
or
for
any
other
reason
page
september
internet
protocol
specification
no
operation
type
this
option
may
be
used
between
options
for
example
to
align
the
beginning
of
a
subsequent
option
on
a
bit
boundary
may
be
copied
introduced
or
deleted
on
fragmentation
or
for
any
other
reason
security
this
option
provides
a
way
for
hosts
to
send
security
compartmentation
handling
restrictions
and
tcc
closed
user
group
parameters
the
format
for
this
option
is
as
follows
sss
sss|ccc
ccc|hhh
hhh
tcc
type
length
security
s
field
bits
specifies
one
of
levels
of
security
eight
of
which
are
reserved
for
future
use
unclassified
confidential
efto
mmmm
prog
restricted
secret
top
secret
reserved
for
future
use
reserved
for
future
use
reserved
for
future
use
reserved
for
future
use
reserved
for
future
use
reserved
for
future
use
reserved
for
future
use
reserved
for
future
use
page
september
internet
protocol
specification
compartments
c
field
bits
an
all
zero
value
is
used
when
the
information
transmitted
is
not
compartmented
other
values
for
the
compartments
field
may
be
obtained
from
the
defense
intelligence
agency
handling
restrictions
h
field
bits
the
values
for
the
control
and
release
markings
are
alphanumeric
digraphs
and
are
defined
in
the
defense
intelligence
agency
manual
diam
standard
security
markings
transmission
control
code
tcc
field
bits
provides
a
means
to
segregate
traffic
and
define
controlled
communities
of
interest
among
subscribers
the
tcc
values
are
trigraphs
and
are
available
from
hq
dca
code
must
be
copied
on
fragmentation
this
option
appears
at
most
once
in
a
datagram
loose
source
and
record
route
length
pointer
route
data
type
the
loose
source
and
record
route
lsrr
option
provides
a
means
for
the
source
of
an
internet
datagram
to
supply
routing
information
to
be
used
by
the
gateways
in
forwarding
the
datagram
to
the
destination
and
to
record
the
route
information
the
option
begins
with
the
option
type
code
the
second
octet
is
the
option
length
which
includes
the
option
type
code
and
the
length
octet
the
pointer
octet
and
length
octets
of
route
data
the
third
octet
is
the
pointer
into
the
route
data
indicating
the
octet
which
begins
the
next
source
address
to
be
processed
the
pointer
is
relative
to
this
option
and
the
smallest
legal
value
for
the
pointer
is
a
route
data
is
composed
of
a
series
of
internet
addresses
each
internet
address
is
bits
or
octets
if
the
pointer
is
greater
than
the
length
the
source
route
is
empty
and
the
recorded
route
full
and
the
routing
is
to
be
based
on
the
destination
address
field
page
september
internet
protocol
specification
if
the
address
in
destination
address
field
has
been
reached
and
the
pointer
is
not
greater
than
the
length
the
next
address
in
the
source
route
replaces
the
address
in
the
destination
address
field
and
the
recorded
route
address
replaces
the
source
address
just
used
and
pointer
is
increased
by
four
the
recorded
route
address
is
the
internet
module's
own
internet
address
as
known
in
the
environment
into
which
this
datagram
is
being
forwarded
this
procedure
of
replacing
the
source
route
with
the
recorded
route
though
it
is
in
the
reverse
of
the
order
it
must
be
in
to
be
used
as
a
source
route
means
the
option
and
the
ip
header
as
a
whole
remains
a
constant
length
as
the
datagram
progresses
through
the
internet
this
option
is
a
loose
source
route
because
the
gateway
or
host
ip
is
allowed
to
use
any
route
of
any
number
of
other
intermediate
gateways
to
reach
the
next
address
in
the
route
must
be
copied
on
fragmentation
appears
at
most
once
in
a
datagram
strict
source
and
record
route
length
pointer
route
data
type
the
strict
source
and
record
route
ssrr
option
provides
a
means
for
the
source
of
an
internet
datagram
to
supply
routing
information
to
be
used
by
the
gateways
in
forwarding
the
datagram
to
the
destination
and
to
record
the
route
information
the
option
begins
with
the
option
type
code
the
second
octet
is
the
option
length
which
includes
the
option
type
code
and
the
length
octet
the
pointer
octet
and
length
octets
of
route
data
the
third
octet
is
the
pointer
into
the
route
data
indicating
the
octet
which
begins
the
next
source
address
to
be
processed
the
pointer
is
relative
to
this
option
and
the
smallest
legal
value
for
the
pointer
is
a
route
data
is
composed
of
a
series
of
internet
addresses
each
internet
address
is
bits
or
octets
if
the
pointer
is
greater
than
the
length
the
source
route
is
empty
and
the
page
september
internet
protocol
specification
recorded
route
full
and
the
routing
is
to
be
based
on
the
destination
address
field
if
the
address
in
destination
address
field
has
been
reached
and
the
pointer
is
not
greater
than
the
length
the
next
address
in
the
source
route
replaces
the
address
in
the
destination
address
field
and
the
recorded
route
address
replaces
the
source
address
just
used
and
pointer
is
increased
by
four
the
recorded
route
address
is
the
internet
module's
own
internet
address
as
known
in
the
environment
into
which
this
datagram
is
being
forwarded
this
procedure
of
replacing
the
source
route
with
the
recorded
route
though
it
is
in
the
reverse
of
the
order
it
must
be
in
to
be
used
as
a
source
route
means
the
option
and
the
ip
header
as
a
whole
remains
a
constant
length
as
the
datagram
progresses
through
the
internet
this
option
is
a
strict
source
route
because
the
gateway
or
host
ip
must
send
the
datagram
directly
to
the
next
address
in
the
source
route
through
only
the
directly
connected
network
indicated
in
the
next
address
to
reach
the
next
gateway
or
host
specified
in
the
route
must
be
copied
on
fragmentation
appears
at
most
once
in
a
datagram
record
route
length
pointer
route
data
type
the
record
route
option
provides
a
means
to
record
the
route
of
an
internet
datagram
the
option
begins
with
the
option
type
code
the
second
octet
is
the
option
length
which
includes
the
option
type
code
and
the
length
octet
the
pointer
octet
and
length
octets
of
route
data
the
third
octet
is
the
pointer
into
the
route
data
indicating
the
octet
which
begins
the
next
area
to
store
a
route
address
the
pointer
is
relative
to
this
option
and
the
smallest
legal
value
for
the
pointer
is
a
recorded
route
is
composed
of
a
series
of
internet
addresses
each
internet
address
is
bits
or
octets
if
the
pointer
is
page
september
internet
protocol
specification
greater
than
the
length
the
recorded
route
data
area
is
full
the
originating
host
must
compose
this
option
with
a
large
enough
route
data
area
to
hold
all
the
address
expected
the
size
of
the
option
does
not
change
due
to
adding
addresses
the
intitial
contents
of
the
route
data
area
must
be
zero
when
an
internet
module
routes
a
datagram
it
checks
to
see
if
the
record
route
option
is
present
if
it
is
it
inserts
its
own
internet
address
as
known
in
the
environment
into
which
this
datagram
is
being
forwarded
into
the
recorded
route
begining
at
the
octet
indicated
by
the
pointer
and
increments
the
pointer
by
four
if
the
route
data
area
is
already
full
the
pointer
exceeds
the
length
the
datagram
is
forwarded
without
inserting
the
address
into
the
recorded
route
if
there
is
some
room
but
not
enough
room
for
a
full
address
to
be
inserted
the
original
datagram
is
considered
to
be
in
error
and
is
discarded
in
either
case
an
icmp
parameter
problem
message
may
be
sent
to
the
source
host
not
copied
on
fragmentation
goes
in
first
fragment
only
appears
at
most
once
in
a
datagram
stream
identifier
stream
id
type
length
this
option
provides
a
way
for
the
bit
satnet
stream
identifier
to
be
carried
through
networks
that
do
not
support
the
stream
concept
must
be
copied
on
fragmentation
appears
at
most
once
in
a
datagram
page
september
internet
protocol
specification
internet
timestamp
length
pointer|oflw|flg
internet
address
timestamp
type
the
option
length
is
the
number
of
octets
in
the
option
counting
the
type
length
pointer
and
overflow/flag
octets
maximum
length
the
pointer
is
the
number
of
octets
from
the
beginning
of
this
option
to
the
end
of
timestamps
plus
one
i.e
it
points
to
the
octet
beginning
the
space
for
next
timestamp
the
smallest
legal
value
is
the
timestamp
area
is
full
when
the
pointer
is
greater
than
the
length
the
overflow
oflw
bits
is
the
number
of
ip
modules
that
cannot
register
timestamps
due
to
lack
of
space
the
flag
flg
bits
values
are
time
stamps
only
stored
in
consecutive
bit
words
each
timestamp
is
preceded
with
internet
address
of
the
registering
entity
the
internet
address
fields
are
prespecified
an
ip
module
only
registers
its
timestamp
if
it
matches
its
own
address
with
the
next
specified
internet
address
the
timestamp
is
a
right-justified
bit
timestamp
in
milliseconds
since
midnight
ut
if
the
time
is
not
available
in
milliseconds
or
cannot
be
provided
with
respect
to
midnight
ut
then
any
time
may
be
inserted
as
a
timestamp
provided
the
high
order
bit
of
the
timestamp
field
is
set
to
one
to
indicate
the
use
of
a
non-standard
value
the
originating
host
must
compose
this
option
with
a
large
enough
timestamp
data
area
to
hold
all
the
timestamp
information
expected
the
size
of
the
option
does
not
change
due
to
adding
page
september
internet
protocol
specification
timestamps
the
intitial
contents
of
the
timestamp
data
area
must
be
zero
or
internet
address/zero
pairs
if
the
timestamp
data
area
is
already
full
the
pointer
exceeds
the
length
the
datagram
is
forwarded
without
inserting
the
timestamp
but
the
overflow
count
is
incremented
by
one
if
there
is
some
room
but
not
enough
room
for
a
full
timestamp
to
be
inserted
or
the
overflow
count
itself
overflows
the
original
datagram
is
considered
to
be
in
error
and
is
discarded
in
either
case
an
icmp
parameter
problem
message
may
be
sent
to
the
source
host
the
timestamp
option
is
not
copied
upon
fragmentation
it
is
carried
in
the
first
fragment
appears
at
most
once
in
a
datagram
padding
variable
the
internet
header
padding
is
used
to
ensure
that
the
internet
header
ends
on
a
bit
boundary
the
padding
is
zero
discussion
the
implementation
of
a
protocol
must
be
robust
each
implementation
must
expect
to
interoperate
with
others
created
by
different
individuals
while
the
goal
of
this
specification
is
to
be
explicit
about
the
protocol
there
is
the
possibility
of
differing
interpretations
in
general
an
implementation
must
be
conservative
in
its
sending
behavior
and
liberal
in
its
receiving
behavior
that
is
it
must
be
careful
to
send
well-formed
datagrams
but
must
accept
any
datagram
that
it
can
interpret
e.g
not
object
to
technical
errors
where
the
meaning
is
still
clear
the
basic
internet
service
is
datagram
oriented
and
provides
for
the
fragmentation
of
datagrams
at
gateways
with
reassembly
taking
place
at
the
destination
internet
protocol
module
in
the
destination
host
of
course
fragmentation
and
reassembly
of
datagrams
within
a
network
or
by
private
agreement
between
the
gateways
of
a
network
is
also
allowed
since
this
is
transparent
to
the
internet
protocols
and
the
higher-level
protocols
this
transparent
type
of
fragmentation
and
reassembly
is
termed
network-dependent
or
intranet
fragmentation
and
is
not
discussed
further
here
internet
addresses
distinguish
sources
and
destinations
to
the
host
level
and
provide
a
protocol
field
as
well
it
is
assumed
that
each
protocol
will
provide
for
whatever
multiplexing
is
necessary
within
a
host
page
september
internet
protocol
specification
addressing
to
provide
for
flexibility
in
assigning
address
to
networks
and
allow
for
the
large
number
of
small
to
intermediate
sized
networks
the
interpretation
of
the
address
field
is
coded
to
specify
a
small
number
of
networks
with
a
large
number
of
host
a
moderate
number
of
networks
with
a
moderate
number
of
hosts
and
a
large
number
of
networks
with
a
small
number
of
hosts
in
addition
there
is
an
escape
code
for
extended
addressing
mode
address
formats
high
order
bits
format
class
bits
of
net
bits
of
host
a
bits
of
net
bits
of
host
b
bits
of
net
bits
of
host
c
escape
to
extended
addressing
mode
a
value
of
zero
in
the
network
field
means
this
network
this
is
only
used
in
certain
icmp
messages
the
extended
addressing
mode
is
undefined
both
of
these
features
are
reserved
for
future
use
the
actual
values
assigned
for
network
addresses
is
given
in
assigned
numbers
the
local
address
assigned
by
the
local
network
must
allow
for
a
single
physical
host
to
act
as
several
distinct
internet
hosts
that
is
there
must
be
a
mapping
between
internet
host
addresses
and
network/host
interfaces
that
allows
several
internet
addresses
to
correspond
to
one
interface
it
must
also
be
allowed
for
a
host
to
have
several
physical
interfaces
and
to
treat
the
datagrams
from
several
of
them
as
if
they
were
all
addressed
to
a
single
host
address
mappings
between
internet
addresses
and
addresses
for
arpanet
satnet
prnet
and
other
networks
are
described
in
address
mappings
fragmentation
and
reassembly
the
internet
identification
field
id
is
used
together
with
the
source
and
destination
address
and
the
protocol
fields
to
identify
datagram
fragments
for
reassembly
the
more
fragments
flag
bit
mf
is
set
if
the
datagram
is
not
the
last
fragment
the
fragment
offset
field
identifies
the
fragment
location
relative
to
the
beginning
of
the
original
unfragmented
datagram
fragments
are
counted
in
units
of
octets
the
page
september
internet
protocol
specification
fragmentation
strategy
is
designed
so
than
an
unfragmented
datagram
has
all
zero
fragmentation
information
mf
fragment
offset
if
an
internet
datagram
is
fragmented
its
data
portion
must
be
broken
on
octet
boundaries
this
format
allows
fragments
of
octets
each
for
a
total
of
octets
note
that
this
is
consistent
with
the
the
datagram
total
length
field
of
course
the
header
is
counted
in
the
total
length
and
not
in
the
fragments
when
fragmentation
occurs
some
options
are
copied
but
others
remain
with
the
first
fragment
only
every
internet
module
must
be
able
to
forward
a
datagram
of
octets
without
further
fragmentation
this
is
because
an
internet
header
may
be
up
to
octets
and
the
minimum
fragment
is
octets
every
internet
destination
must
be
able
to
receive
a
datagram
of
octets
either
in
one
piece
or
in
fragments
to
be
reassembled
the
fields
which
may
be
affected
by
fragmentation
include
options
field
more
fragments
flag
fragment
offset
internet
header
length
field
total
length
field
header
checksum
if
the
don't
fragment
flag
df
bit
is
set
then
internet
fragmentation
of
this
datagram
is
not
permitted
although
it
may
be
discarded
this
can
be
used
to
prohibit
fragmentation
in
cases
where
the
receiving
host
does
not
have
sufficient
resources
to
reassemble
internet
fragments
one
example
of
use
of
the
don't
fragment
feature
is
to
down
line
load
a
small
host
a
small
host
could
have
a
boot
strap
program
that
accepts
a
datagram
stores
it
in
memory
and
then
executes
it
the
fragmentation
and
reassembly
procedures
are
most
easily
described
by
examples
the
following
procedures
are
example
implementations
general
notation
in
the
following
pseudo
programs
means
less
than
or
equal
means
not
equal
means
equal
means
is
set
to
also
x
to
y
includes
x
and
excludes
y
for
example
to
would
include
and
but
not
page
september
internet
protocol
specification
an
example
fragmentation
procedure
the
maximum
sized
datagram
that
can
be
transmitted
through
the
next
network
is
called
the
maximum
transmission
unit
mtu
if
the
total
length
is
less
than
or
equal
the
maximum
transmission
unit
then
submit
this
datagram
to
the
next
step
in
datagram
processing
otherwise
cut
the
datagram
into
two
fragments
the
first
fragment
being
the
maximum
size
and
the
second
fragment
being
the
rest
of
the
datagram
the
first
fragment
is
submitted
to
the
next
step
in
datagram
processing
while
the
second
fragment
is
submitted
to
this
procedure
in
case
it
is
still
too
large
notation
fo
fragment
offset
ihl
internet
header
length
df
don't
fragment
flag
mf
more
fragments
flag
tl
total
length
ofo
old
fragment
offset
oihl
old
internet
header
length
omf
old
more
fragments
flag
otl
old
total
length
nfb
number
of
fragment
blocks
mtu
maximum
transmission
unit
procedure
if
tl
mtu
then
submit
this
datagram
to
the
next
step
in
datagram
processing
else
if
df
then
discard
the
datagram
else
to
produce
the
first
fragment
copy
the
original
internet
header
oihl
ihl
otl
tl
ofo
fo
omf
mf
nfb
mtu-ihl
attach
the
first
nfb
data
octets
correct
the
header
mf
tl
ihl*4)+(nfb
recompute
checksum
submit
this
fragment
to
the
next
step
in
datagram
processing
to
produce
the
second
fragment
selectively
copy
the
internet
header
some
options
are
not
copied
see
option
definitions
append
the
remaining
data
correct
the
header
ihl
oihl*4)-(length
of
options
not
copied
page
september
internet
protocol
specification
tl
otl
nfb
oihl-ihl
fo
ofo
nfb
mf
omf
recompute
checksum
submit
this
fragment
to
the
fragmentation
test
done
in
the
above
procedure
each
fragment
except
the
last
was
made
the
maximum
allowable
size
an
alternative
might
produce
less
than
the
maximum
size
datagrams
for
example
one
could
implement
a
fragmentation
procedure
that
repeatly
divided
large
datagrams
in
half
until
the
resulting
fragments
were
less
than
the
maximum
transmission
unit
size
an
example
reassembly
procedure
for
each
datagram
the
buffer
identifier
is
computed
as
the
concatenation
of
the
source
destination
protocol
and
identification
fields
if
this
is
a
whole
datagram
that
is
both
the
fragment
offset
and
the
more
fragments
fields
are
zero
then
any
reassembly
resources
associated
with
this
buffer
identifier
are
released
and
the
datagram
is
forwarded
to
the
next
step
in
datagram
processing
if
no
other
fragment
with
this
buffer
identifier
is
on
hand
then
reassembly
resources
are
allocated
the
reassembly
resources
consist
of
a
data
buffer
a
header
buffer
a
fragment
block
bit
table
a
total
data
length
field
and
a
timer
the
data
from
the
fragment
is
placed
in
the
data
buffer
according
to
its
fragment
offset
and
length
and
bits
are
set
in
the
fragment
block
bit
table
corresponding
to
the
fragment
blocks
received
if
this
is
the
first
fragment
that
is
the
fragment
offset
is
zero
this
header
is
placed
in
the
header
buffer
if
this
is
the
last
fragment
that
is
the
more
fragments
field
is
zero
the
total
data
length
is
computed
if
this
fragment
completes
the
datagram
tested
by
checking
the
bits
set
in
the
fragment
block
table
then
the
datagram
is
sent
to
the
next
step
in
datagram
processing
otherwise
the
timer
is
set
to
the
maximum
of
the
current
timer
value
and
the
value
of
the
time
to
live
field
from
this
fragment
and
the
reassembly
routine
gives
up
control
if
the
timer
runs
out
the
all
reassembly
resources
for
this
buffer
identifier
are
released
the
initial
setting
of
the
timer
is
a
lower
bound
on
the
reassembly
waiting
time
this
is
because
the
waiting
time
will
be
increased
if
the
time
to
live
in
the
arriving
fragment
is
greater
than
the
current
timer
value
but
will
not
be
decreased
if
it
is
less
the
maximum
this
timer
value
could
reach
is
the
maximum
time
to
live
approximately
minutes
the
current
recommendation
for
the
initial
timer
setting
is
seconds
this
may
be
changed
as
experience
with
page
september
internet
protocol
specification
this
protocol
accumulates
note
that
the
choice
of
this
parameter
value
is
related
to
the
buffer
capacity
available
and
the
data
rate
of
the
transmission
medium
that
is
data
rate
times
timer
value
equals
buffer
size
e.g
kb/s
x
s
kb
notation
fo
fragment
offset
ihl
internet
header
length
mf
more
fragments
flag
ttl
time
to
live
nfb
number
of
fragment
blocks
tl
total
length
tdl
total
data
length
bufid
buffer
identifier
rcvbt
fragment
received
bit
table
tlb
timer
lower
bound
procedure
bufid
source|destination|protocol|identification
if
fo
and
mf
then
if
buffer
with
bufid
is
allocated
then
flush
all
reassembly
for
this
bufid
submit
datagram
to
next
step
done
else
if
no
buffer
with
bufid
is
allocated
then
allocate
reassembly
resources
with
bufid
timer
tlb
tdl
put
data
from
fragment
into
data
buffer
with
bufid
from
octet
fo
to
octet
tl-(ihl*4))+fo
set
rcvbt
bits
from
fo
to
fo+((tl-(ihl
if
mf
then
tdl
tl-(ihl*4)+(fo
if
fo
then
put
header
in
header
buffer
if
tdl
and
all
rcvbt
bits
from
to
tdl
are
set
then
tl
tdl+(ihl
submit
datagram
to
next
step
free
all
reassembly
resources
for
this
bufid
done
timer
max(timer,ttl
give
up
until
next
fragment
or
timer
expires
timer
expires
flush
all
reassembly
with
this
bufid
done
in
the
case
that
two
or
more
fragments
contain
the
same
data
page
september
internet
protocol
specification
either
identically
or
through
a
partial
overlap
this
procedure
will
use
the
more
recently
arrived
copy
in
the
data
buffer
and
datagram
delivered
identification
the
choice
of
the
identifier
for
a
datagram
is
based
on
the
need
to
provide
a
way
to
uniquely
identify
the
fragments
of
a
particular
datagram
the
protocol
module
assembling
fragments
judges
fragments
to
belong
to
the
same
datagram
if
they
have
the
same
source
destination
protocol
and
identifier
thus
the
sender
must
choose
the
identifier
to
be
unique
for
this
source
destination
pair
and
protocol
for
the
time
the
datagram
or
any
fragment
of
it
could
be
alive
in
the
internet
it
seems
then
that
a
sending
protocol
module
needs
to
keep
a
table
of
identifiers
one
entry
for
each
destination
it
has
communicated
with
in
the
last
maximum
packet
lifetime
for
the
internet
however
since
the
identifier
field
allows
different
values
some
host
may
be
able
to
simply
use
unique
identifiers
independent
of
destination
it
is
appropriate
for
some
higher
level
protocols
to
choose
the
identifier
for
example
tcp
protocol
modules
may
retransmit
an
identical
tcp
segment
and
the
probability
for
correct
reception
would
be
enhanced
if
the
retransmission
carried
the
same
identifier
as
the
original
transmission
since
fragments
of
either
datagram
could
be
used
to
construct
a
correct
tcp
segment
type
of
service
the
type
of
service
tos
is
for
internet
service
quality
selection
the
type
of
service
is
specified
along
the
abstract
parameters
precedence
delay
throughput
and
reliability
these
abstract
parameters
are
to
be
mapped
into
the
actual
service
parameters
of
the
particular
networks
the
datagram
traverses
precedence
an
independent
measure
of
the
importance
of
this
datagram
delay
prompt
delivery
is
important
for
datagrams
with
this
indication
throughput
high
data
rate
is
important
for
datagrams
with
this
indication
page
september
internet
protocol
specification
reliability
a
higher
level
of
effort
to
ensure
delivery
is
important
for
datagrams
with
this
indication
for
example
the
arpanet
has
a
priority
bit
and
a
choice
between
standard
messages
type
and
uncontrolled
messages
type
the
choice
between
single
packet
and
multipacket
messages
can
also
be
considered
a
service
parameter
the
uncontrolled
messages
tend
to
be
less
reliably
delivered
and
suffer
less
delay
suppose
an
internet
datagram
is
to
be
sent
through
the
arpanet
let
the
internet
type
of
service
be
given
as
precedence
delay
throughput
reliability
in
this
example
the
mapping
of
these
parameters
to
those
available
for
the
arpanet
would
be
to
set
the
arpanet
priority
bit
on
since
the
internet
precedence
is
in
the
upper
half
of
its
range
to
select
standard
messages
since
the
throughput
and
reliability
requirements
are
indicated
and
delay
is
not
more
details
are
given
on
service
mappings
in
service
mappings
time
to
live
the
time
to
live
is
set
by
the
sender
to
the
maximum
time
the
datagram
is
allowed
to
be
in
the
internet
system
if
the
datagram
is
in
the
internet
system
longer
than
the
time
to
live
then
the
datagram
must
be
destroyed
this
field
must
be
decreased
at
each
point
that
the
internet
header
is
processed
to
reflect
the
time
spent
processing
the
datagram
even
if
no
local
information
is
available
on
the
time
actually
spent
the
field
must
be
decremented
by
the
time
is
measured
in
units
of
seconds
i.e
the
value
means
one
second
thus
the
maximum
time
to
live
is
seconds
or
minutes
since
every
module
that
processes
a
datagram
must
decrease
the
ttl
by
at
least
one
even
if
it
process
the
datagram
in
less
than
a
second
the
ttl
must
be
thought
of
only
as
an
upper
bound
on
the
time
a
datagram
may
exist
the
intention
is
to
cause
undeliverable
datagrams
to
be
discarded
and
to
bound
the
maximum
datagram
lifetime
some
higher
level
reliable
connection
protocols
are
based
on
assumptions
that
old
duplicate
datagrams
will
not
arrive
after
a
certain
time
elapses
the
ttl
is
a
way
for
such
protocols
to
have
an
assurance
that
their
assumption
is
met
page
september
internet
protocol
specification
options
the
options
are
optional
in
each
datagram
but
required
in
implementations
that
is
the
presence
or
absence
of
an
option
is
the
choice
of
the
sender
but
each
internet
module
must
be
able
to
parse
every
option
there
can
be
several
options
present
in
the
option
field
the
options
might
not
end
on
a
bit
boundary
the
internet
header
must
be
filled
out
with
octets
of
zeros
the
first
of
these
would
be
interpreted
as
the
end-of-options
option
and
the
remainder
as
internet
header
padding
every
internet
module
must
be
able
to
act
on
every
option
the
security
option
is
required
if
classified
restricted
or
compartmented
traffic
is
to
be
passed
checksum
the
internet
header
checksum
is
recomputed
if
the
internet
header
is
changed
for
example
a
reduction
of
the
time
to
live
additions
or
changes
to
internet
options
or
due
to
fragmentation
this
checksum
at
the
internet
level
is
intended
to
protect
the
internet
header
fields
from
transmission
errors
there
are
some
applications
where
a
few
data
bit
errors
are
acceptable
while
retransmission
delays
are
not
if
the
internet
protocol
enforced
data
correctness
such
applications
could
not
be
supported
errors
internet
protocol
errors
may
be
reported
via
the
icmp
messages
interfaces
the
functional
description
of
user
interfaces
to
the
ip
is
at
best
fictional
since
every
operating
system
will
have
different
facilities
consequently
we
must
warn
readers
that
different
ip
implementations
may
have
different
user
interfaces
however
all
ips
must
provide
a
certain
minimum
set
of
services
to
guarantee
that
all
ip
implementations
can
support
the
same
protocol
hierarchy
this
section
specifies
the
functional
interfaces
required
of
all
ip
implementations
internet
protocol
interfaces
on
one
side
to
the
local
network
and
on
the
other
side
to
either
a
higher
level
protocol
or
an
application
program
in
the
following
the
higher
level
protocol
or
application
page
september
internet
protocol
specification
program
or
even
a
gateway
program
will
be
called
the
user
since
it
is
using
the
internet
module
since
internet
protocol
is
a
datagram
protocol
there
is
minimal
memory
or
state
maintained
between
datagram
transmissions
and
each
call
on
the
internet
protocol
module
by
the
user
supplies
all
information
necessary
for
the
ip
to
perform
the
service
requested
an
example
upper
level
interface
the
following
two
example
calls
satisfy
the
requirements
for
the
user
to
internet
protocol
module
communication
means
returns
send
src
dst
prot
tos
ttl
bufptr
len
id
df
opt
result
where
src
source
address
dst
destination
address
prot
protocol
tos
type
of
service
ttl
time
to
live
bufptr
buffer
pointer
len
length
of
buffer
id
identifier
df
don't
fragment
opt
option
data
result
response
ok
datagram
sent
ok
error
error
in
arguments
or
local
network
error
note
that
the
precedence
is
included
in
the
tos
and
the
security/compartment
is
passed
as
an
option
recv
bufptr
prot
result
src
dst
tos
len
opt
where
bufptr
buffer
pointer
prot
protocol
result
response
ok
datagram
received
ok
error
error
in
arguments
len
length
of
buffer
src
source
address
dst
destination
address
tos
type
of
service
opt
option
data
page
september
internet
protocol
specification
when
the
user
sends
a
datagram
it
executes
the
send
call
supplying
all
the
arguments
the
internet
protocol
module
on
receiving
this
call
checks
the
arguments
and
prepares
and
sends
the
message
if
the
arguments
are
good
and
the
datagram
is
accepted
by
the
local
network
the
call
returns
successfully
if
either
the
arguments
are
bad
or
the
datagram
is
not
accepted
by
the
local
network
the
call
returns
unsuccessfully
on
unsuccessful
returns
a
reasonable
report
must
be
made
as
to
the
cause
of
the
problem
but
the
details
of
such
reports
are
up
to
individual
implementations
when
a
datagram
arrives
at
the
internet
protocol
module
from
the
local
network
either
there
is
a
pending
recv
call
from
the
user
addressed
or
there
is
not
in
the
first
case
the
pending
call
is
satisfied
by
passing
the
information
from
the
datagram
to
the
user
in
the
second
case
the
user
addressed
is
notified
of
a
pending
datagram
if
the
user
addressed
does
not
exist
an
icmp
error
message
is
returned
to
the
sender
and
the
data
is
discarded
the
notification
of
a
user
may
be
via
a
pseudo
interrupt
or
similar
mechanism
as
appropriate
in
the
particular
operating
system
environment
of
the
implementation
a
user's
recv
call
may
then
either
be
immediately
satisfied
by
a
pending
datagram
or
the
call
may
be
pending
until
a
datagram
arrives
the
source
address
is
included
in
the
send
call
in
case
the
sending
host
has
several
addresses
multiple
physical
connections
or
logical
addresses
the
internet
module
must
check
to
see
that
the
source
address
is
one
of
the
legal
address
for
this
host
an
implementation
may
also
allow
or
require
a
call
to
the
internet
module
to
indicate
interest
in
or
reserve
exclusive
use
of
a
class
of
datagrams
e.g
all
those
with
a
certain
value
in
the
protocol
field
this
section
functionally
characterizes
a
user/ip
interface
the
notation
used
is
similar
to
most
procedure
of
function
calls
in
high
level
languages
but
this
usage
is
not
meant
to
rule
out
trap
type
service
calls
e.g
svcs
uuos
emts
or
any
other
form
of
interprocess
communication
page
september
internet
protocol
appendix
a
examples
scenarios
example
this
is
an
example
of
the
minimal
data
carrying
internet
datagram
ver
ihl
type
of
service
total
length
identification
flg
fragment
offset
time
protocol
header
checksum
source
address
destination
address
data
example
internet
datagram
figure
note
that
each
tick
mark
represents
one
bit
position
this
is
a
internet
datagram
in
version
of
internet
protocol
the
internet
header
consists
of
five
bit
words
and
the
total
length
of
the
datagram
is
octets
this
datagram
is
a
complete
datagram
not
a
fragment
page
september
internet
protocol
example
in
this
example
we
show
first
a
moderate
size
internet
datagram
data
octets
then
two
internet
fragments
that
might
result
from
the
fragmentation
of
this
datagram
if
the
maximum
sized
transmission
allowed
were
octets
ver
ihl
type
of
service
total
length
identification
flg
fragment
offset
time
protocol
header
checksum
source
address
destination
address
data
data
data
data
example
internet
datagram
figure
page
september
internet
protocol
now
the
first
fragment
that
results
from
splitting
the
datagram
after
data
octets
ver
ihl
type
of
service
total
length
identification
flg
fragment
offset
time
protocol
header
checksum
source
address
destination
address
data
data
data
data
example
internet
fragment
figure
page
september
internet
protocol
and
the
second
fragment
ver
ihl
type
of
service
total
length
identification
flg
fragment
offset
time
protocol
header
checksum
source
address
destination
address
data
data
data
data
example
internet
fragment
figure
page
september
internet
protocol
example
here
we
show
an
example
of
a
datagram
containing
options
ver
ihl
type
of
service
total
length
identification
flg
fragment
offset
time
protocol
header
checksum
source
address
destination
address
opt
code
x
opt
len
option
value
opt
code
x
opt
len
option
value
opt
code
opt
code
y
opt
len
option
value
opt
code
data
data
data
example
internet
datagram
figure
page
september
internet
protocol
appendix
b
data
transmission
order
the
order
of
transmission
of
the
header
and
data
described
in
this
document
is
resolved
to
the
octet
level
whenever
a
diagram
shows
a
group
of
octets
the
order
of
transmission
of
those
octets
is
the
normal
order
in
which
they
are
read
in
english
for
example
in
the
following
diagram
the
octets
are
transmitted
in
the
order
they
are
numbered
transmission
order
of
bytes
figure
whenever
an
octet
represents
a
numeric
quantity
the
left
most
bit
in
the
diagram
is
the
high
order
or
most
significant
bit
that
is
the
bit
labeled
is
the
most
significant
bit
for
example
the
following
diagram
represents
the
value
decimal
significance
of
bits
figure
similarly
whenever
a
multi-octet
field
represents
a
numeric
quantity
the
left
most
bit
of
the
whole
field
is
the
most
significant
bit
when
a
multi-octet
quantity
is
transmitted
the
most
significant
octet
is
transmitted
first
page
september
internet
protocol
page
september
internet
protocol
glossary
bbn
report
the
specification
of
the
interconnection
of
a
host
and
an
imp
the
specification
of
interface
between
a
host
and
the
arpanet
arpanet
leader
the
control
information
on
an
arpanet
message
at
the
host-imp
interface
arpanet
message
the
unit
of
transmission
between
a
host
and
an
imp
in
the
arpanet
the
maximum
size
is
about
octets
bits
arpanet
packet
a
unit
of
transmission
used
internally
in
the
arpanet
between
imps
the
maximum
size
is
about
octets
bits
destination
the
destination
address
an
internet
header
field
df
the
don't
fragment
bit
carried
in
the
flags
field
flags
an
internet
header
field
carrying
various
control
flags
fragment
offset
this
internet
header
field
indicates
where
in
the
internet
datagram
a
fragment
belongs
ggp
gateway
to
gateway
protocol
the
protocol
used
primarily
between
gateways
to
control
routing
and
other
gateway
functions
header
control
information
at
the
beginning
of
a
message
segment
datagram
packet
or
block
of
data
icmp
internet
control
message
protocol
implemented
in
the
internet
module
the
icmp
is
used
from
gateways
to
hosts
and
between
hosts
to
report
errors
and
make
routing
suggestions
page
september
internet
protocol
glossary
identification
an
internet
header
field
carrying
the
identifying
value
assigned
by
the
sender
to
aid
in
assembling
the
fragments
of
a
datagram
ihl
the
internet
header
field
internet
header
length
is
the
length
of
the
internet
header
measured
in
bit
words
imp
the
interface
message
processor
the
packet
switch
of
the
arpanet
internet
address
a
four
octet
bit
source
or
destination
address
consisting
of
a
network
field
and
a
local
address
field
internet
datagram
the
unit
of
data
exchanged
between
a
pair
of
internet
modules
includes
the
internet
header
internet
fragment
a
portion
of
the
data
of
an
internet
datagram
with
an
internet
header
local
address
the
address
of
a
host
within
a
network
the
actual
mapping
of
an
internet
local
address
on
to
the
host
addresses
in
a
network
is
quite
general
allowing
for
many
to
one
mappings
mf
the
more-fragments
flag
carried
in
the
internet
header
flags
field
module
an
implementation
usually
in
software
of
a
protocol
or
other
procedure
more-fragments
flag
a
flag
indicating
whether
or
not
this
internet
datagram
contains
the
end
of
an
internet
datagram
carried
in
the
internet
header
flags
field
nfb
the
number
of
fragment
blocks
in
a
the
data
portion
of
an
internet
fragment
that
is
the
length
of
a
portion
of
data
measured
in
octet
units
page
september
internet
protocol
glossary
octet
an
eight
bit
byte
options
the
internet
header
options
field
may
contain
several
options
and
each
option
may
be
several
octets
in
length
padding
the
internet
header
padding
field
is
used
to
ensure
that
the
data
begins
on
bit
word
boundary
the
padding
is
zero
protocol
in
this
document
the
next
higher
level
protocol
identifier
an
internet
header
field
rest
the
local
address
portion
of
an
internet
address
source
the
source
address
an
internet
header
field
tcp
transmission
control
protocol
a
host-to-host
protocol
for
reliable
communication
in
internet
environments
tcp
segment
the
unit
of
data
exchanged
between
tcp
modules
including
the
tcp
header
tftp
trivial
file
transfer
protocol
a
simple
file
transfer
protocol
built
on
udp
time
to
live
an
internet
header
field
which
indicates
the
upper
bound
on
how
long
this
internet
datagram
may
exist
tos
type
of
service
total
length
the
internet
header
field
total
length
is
the
length
of
the
datagram
in
octets
including
internet
header
and
data
ttl
time
to
live
page
september
internet
protocol
glossary
type
of
service
an
internet
header
field
which
indicates
the
type
or
quality
of
service
for
this
internet
datagram
udp
user
datagram
protocol
a
user
level
protocol
for
transaction
oriented
applications
user
the
user
of
the
internet
protocol
this
may
be
a
higher
level
protocol
module
an
application
program
or
a
gateway
program
version
the
version
field
indicates
the
format
of
the
internet
header
page
september
internet
protocol
references
cerf
v
the
catenet
model
for
internetworking
information
processing
techniques
office
defense
advanced
research
projects
agency
ien
july
bolt
beranek
and
newman
specification
for
the
interconnection
of
a
host
and
an
imp
bbn
technical
report
revised
may
postel
j
internet
control
message
protocol
darpa
internet
program
protocol
specification
rfc
usc/information
sciences
institute
september
shoch
j
inter-network
naming
addressing
and
routing
compcon
ieee
computer
society
fall
postel
j
address
mappings
rfc
usc/information
sciences
institute
september
shoch
j
packet
fragmentation
in
inter-network
protocols
computer
networks
v
n
february
strazisar
v
how
to
build
a
gateway
ien
bolt
beranek
and
newman
august
postel
service
mappings
rfc
usc/information
sciences
institute
september
postel
assigned
numbers
rfc
usc/information
sciences
institute
september
page
